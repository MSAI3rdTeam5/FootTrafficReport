# HTTP (포트 80) 요청을 HTTPS로 리다이렉트
server {
    listen 80;
    server_name msteam5iseeu.ddns.net;
    return 301 https://$host$request_uri;
}

# HTTPS 서버 블록
server {
    listen 443 ssl;
    server_name msteam5iseeu.ddns.net;

    # SSL 인증서 경로
    ssl_certificate     /etc/letsencrypt/live/msteam5iseeu.ddns.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/msteam5iseeau.ddns.net/privkey.pem;

    # 1) people-detection 서비스
    location /people-detection/ {
        proxy_pass http://people-detection:8500/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }

    # # 2) report-generation 서비스
    # location /report-generation/ {
    #     # 변경: http://report_generation:8600/
    #     proxy_pass http://report-generation:8600/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-Proto https;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_redirect default;
    # }

    # 2) 백엔드 API
    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }

    # 3) SwaggerUI, OpenAPI
    location /docs {
        proxy_pass http://backend:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }
    location = /docs/ {
        return 301 https://$host/docs;
    }

    location /redoc {
        proxy_pass http://backend:8000/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }
    location = /redoc/ {
        return 301 https://$host/redoc;
    }

    location /openapi.json {
        proxy_pass http://backend:8000/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    ############################################################
    # 중요) Socket.io 서버를 media-sfu로 전달하기 위한 프록시
    # 예: 브라우저에서 wss://msteam5iseeu.ddns.net/socket.io/
    #     → 내부 media-sfu:3000/socket.io/
    ############################################################
    location /socket.io/ {
        proxy_pass http://media-sfu:3000/socket.io/;
        proxy_http_version 1.1;

        # Upgrade/Connection 헤더: WebSocket 통신 위해 필요
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 프록시 관련 공통 헤더
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # 유휴 타임아웃: 영상/오디오 등 장시간 연결 대비
        proxy_read_timeout 86400;
    }

    # 프론트엔드 정적 파일 서빙
    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }
}
