# HTTP (포트 80) 요청을 HTTPS로 리다이렉트
server {
    listen 80;
    server_name msteam5iseeu.ddns.net;
    return 301 https://$host$request_uri;
}

# HTTPS 서버 블록
server {
    listen 443 ssl;
    server_name msteam5iseeu.ddns.net;

    # COOP 헤더 추가: 팝업과의 통신을 허용
    add_header Cross-Origin-Opener-Policy "same-origin-allow-popups";

    # SSL 인증서 경로 (두 파일 모두 동일한 도메인 사용)
    ssl_certificate     /etc/letsencrypt/live/msteam5iseeu.ddns.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/msteam5iseeu.ddns.net/privkey.pem;


    ############################################################
    # /start_rtp_pipeline -> people-detection (port 8500)
    ############################################################
    location = /start_rtp_pipeline {
        proxy_pass http://people-detection:8500/start_rtp_pipeline;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 1) people-detection 서비스
    location /people-detection/ {
        proxy_pass http://people-detection:8500/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }

    # 2) report-generation 서비스
    location /report-generation/ {
        # OPTIONS 메서드 직접 처리
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
            add_header 'Access-Control-Max-Age' 3600 always;
            return 204;
        }

        proxy_pass http://report-generation:8600/;
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;

        # 타임아웃 설정 추가
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }

    # 3) chatbot 서비스
    location /chatbot/ {
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
            add_header 'Access-Control-Max-Age' 3600 always;
            return 204;
        }

        proxy_pass http://chatbot:8700/;
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }

    # 4) 백엔드 API
    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }

    # 5) SwaggerUI, OpenAPI
    location /docs {
        proxy_pass http://backend:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }
    location = /docs/ {
        return 301 https://$host/docs;
    }

    location /redoc {
        proxy_pass http://backend:8000/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }
    location = /redoc/ {
        return 301 https://$host/redoc;
    }

    location /openapi.json {
        proxy_pass http://backend:8000/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    ############################################################
    # 6) WebRTC REST API 프록시: /rtc/v1/ => SRS(1985)
    ############################################################
    location /rtc/v1/ {
        proxy_pass http://srs:1985/rtc/v1/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
    }

    ############################################################
    # 7) Socket.io -> mediasoup(3000) 프록시
    ############################################################
    location /socket.io/ {
        proxy_pass http://media-sfu:3000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400;
    }

    ############################################################
    # 8) SRS HLS/HTTP-FLV(8080) 프록시
    ############################################################
    location /live/ {
        proxy_pass http://srs:8080/live/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
    }

    ############################################################
    # 9) 프론트엔드 정적 파일 서빙
    ############################################################
    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }
}
