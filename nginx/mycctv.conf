# HTTP (포트 80) 요청을 HTTPS로 리다이렉트하는 서버 블록
server {
    listen 80;
    server_name msteam5iseeu.ddns.net;
    return 301 https://$host$request_uri;
}

# HTTPS 서버 블록
server {
    listen 443 ssl;
    server_name msteam5iseeu.ddns.net;

    # SSL 인증서 경로 (Certbot 등으로 발급받은 유효 인증서)
    ssl_certificate     /etc/letsencrypt/live/msteam5iseeu.ddns.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/msteam5iseeu.ddns.net/privkey.pem;

    # -------------------------------------
    # 1) people-detection 서비스
    # -------------------------------------
    location /people-detection/ {
        proxy_pass http://people_detection_container:8500/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }

    # -------------------------------------
    # 2) report-generation 서비스
    # -------------------------------------
    location /report-generation/ {
        proxy_pass http://report_generation_container:8600/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }

    # -------------------------------------
    # 3) 백엔드 API
    # -------------------------------------
    location /api/ {
        proxy_pass http://backend_container:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }

    # SwaggerUI, OpenAPI
    location /docs {
        proxy_pass http://backend_container:8000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }
    location = /docs/ {
        return 301 https://$host/docs;
    }

    location /redoc {
        proxy_pass http://backend_container:8000/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect default;
    }
    location = /redoc/ {
        return 301 https://$host/redoc;
    }

    location /openapi.json {
        proxy_pass http://backend_container:8000/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    # -------------------------------------
    # (추가) Janus WebSocket 프록시
    # -------------------------------------
    #  - 브라우저에서는 wss://msteam5iseeu.ddns.net/janus-ws/ 로 연결
    #  - 내부적으로 plain WS (ex: media_sfu_container:8188) 사용
    location /janus-ws/ {
        proxy_pass http://media_sfu_container:8188/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 공통 헤더
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # (옵션) WebSocket Keep-alive
        proxy_read_timeout 86400;
    }

    # -------------------------------------
    # 프론트엔드 정적 파일 서빙 (React)
    # -------------------------------------
    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }
}
