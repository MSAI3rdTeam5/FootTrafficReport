feat : 테스트 
# 커밋 제목 (50자 이내로 간결하게 작성)
# 예: feat: 사용자 로그인 기능 추가

# 커밋 타입 선택:
# 다음 중 하나를 선택하여 제목의 앞부분에 추가하세요.
#
# feat:     새로운 기능 추가
# fix:      버그 수정
# docs:     문서 수정 (README, 주석 등)
# style:    코드 스타일 변경 (포맷팅, 세미콜론 추가 등, 기능 변화 없음)
# refactor: 코드 리팩토링 (기능 변화 없음)
# perf:     성능 개선
# test:     테스트 코드 추가 또는 수정
# chore:    기타 변경 사항 (빌드 시스템, 패키지 관리 등)
# revert:   이전 커밋 되돌리기
# ------------------------
#
# 예: feat: 사용자 로그인 기능 추가
# 
# 상세 설명 (필요한 경우, 변경 이유와 방법을 작성)
#
# 변경 내용:
# - (예: 사용자 로그인 기능 구현)
# - (예: API 요청 시 인증 토큰 추가)
#
# 변경 이유:
# - (예: 사용자 편의성을 위한 필수 기능)
#
# 관련된 이슈 번호 (선택)
# 예: Closes #123, Resolves #456

# ------------------------
# 작성 지침
# 1. 제목은 50자 이내로 간결히 작성합니다.
# 2. 제목은 명령조로 작성하며, 과거형을 사용하지 않습니다.
# 3. 제목 끝에는 마침표(.)를 붙이지 않습니다.
# 4. 본문은 제목과 한 줄 띄우고, 72자 이내로 작성합니다.
# 5. 본문은 변경 이유, 변경 내용, 중요성을 설명합니다.(어떻게(How)보다는 무엇(What)과 왜(Why)를 설명)
# 6. 관련 이슈 번호는 "Closes #123" 또는 "Resolves #456" 형태로 작성합니다.
